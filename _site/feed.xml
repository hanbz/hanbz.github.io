<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-20T16:56:23+08:00</updated><id>http://localhost:4000//</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/01/20/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-01-20T16:49:36+08:00</published><updated>2017-01-20T16:49:36+08:00</updated><id>http://localhost:4000/jekyll/update/2017/01/20/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/01/20/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Laravel 5.4 Feature</title><link href="http://localhost:4000/2017/01/20/laravel-5.4-feature.html" rel="alternate" type="text/html" title="Laravel 5.4 Feature" /><published>2017-01-20T00:00:00+08:00</published><updated>2017-01-20T00:00:00+08:00</updated><id>http://localhost:4000/2017/01/20/laravel-5.4-feature</id><content type="html" xml:base="http://localhost:4000/2017/01/20/laravel-5.4-feature.html">&lt;p&gt;Laravel 5.3才剛更新到產品上沒多久就出5.4了Orz…要逼死誰啊XD
但是許多的新特性的確不錯，來紀錄一下新特性的內容吧！&lt;/p&gt;

&lt;h3 id=&quot;1-includes-two-new-middleware&quot;&gt;1. Includes Two New Middleware&lt;/h3&gt;
&lt;p&gt;新增兩個Middleware分別是TrimStrings與ConvertEmptyStringsToNull，TrimStrings的功能是把進來的Request裡面的內容自動做trim的動作，避免使用者多塞空格進來，ConvertEmptyStringsToNull則是當Request裡面的內容是”“空字串的話，會自動轉成NULL方便內容判斷，例如：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vat&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;套用前&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dd(request('vat'));  
// ''
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;套用後&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dd(request('vat'));    
// null
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;2-automatic-facades&quot;&gt;2. Automatic Facade’s&lt;/h3&gt;
&lt;p&gt;快速建立Facade的方式，方法如下：\
&lt;strong&gt;建立&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;namespace App;

class Zonda 
{
    public function zurf()
    {
        return ‘Zurfing’;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use Facades\ {
    App\Zonda
};

Route::get('/', function () {
    return Zonda::zurf();
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;3-laravel-dusk&quot;&gt;3. Laravel Dusk&lt;/h3&gt;
&lt;p&gt;Laravel Dusk是一整套新的測試工具包，原本的Laravel測試在遇到AJAX之類的JavaScript時，
因為原本使用的”Symfony BrowserKit”無法支援類似情景就不方便寫測試，
現在Laravel Dusk支援諸如點擊按鈕或連結時的特效，類似拖動或是下拉式選單，
除此之外，也可以進行輸入帳號密碼登入，還有模擬同時開啟多個瀏覽器來測試socket之類的功能，
也會新增.env.dusk來專門用來做測試使用，底層的實作是使用了ChromeDriver與
Facebook Php-webdriver，相信有在寫測試的人會喜歡這個新功能。&lt;/p&gt;

&lt;h3 id=&quot;4-laravel-elixir-will-be-renamed-to-laravel-mix&quot;&gt;4. Laravel Elixir Will Be Renamed To Laravel Mix&lt;/h3&gt;
&lt;p&gt;原本的Elixir將改名為Mix，原因是底層的實作更換掉了，由原本的Gulp全面改成Webpack，
這部分使用者如果本來就有在使用Webpack的應該可以很快上手，其實也只是把本來的設定檔換掉而已。&lt;/p&gt;

&lt;h3 id=&quot;5-you-can-use-markdown-in-your-emails&quot;&gt;5. You Can Use Markdown in Your Emails&lt;/h3&gt;
&lt;p&gt;現在可以在Email的內容裡面寫Markdown語法了，使用方式為&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return $this-&amp;gt;markdown('emails.thanks');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;除此之外，還可以使用新的Balde帶來的元件，&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;button&lt;/li&gt;
  &lt;li&gt;footer&lt;/li&gt;
  &lt;li&gt;header&lt;/li&gt;
  &lt;li&gt;layout&lt;/li&gt;
  &lt;li&gt;message&lt;/li&gt;
  &lt;li&gt;panel&lt;/li&gt;
  &lt;li&gt;promotion&lt;/li&gt;
  &lt;li&gt;subcopy&lt;/li&gt;
  &lt;li&gt;table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用方法如下：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@component('mail::button', ['url' =&amp;gt; $actionUrl, 'color' =&amp;gt; $color])

@endcomponent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;6-route-improvements-are-coming-to-laravel-54&quot;&gt;6. Route improvements are coming to Laravel 5.4&lt;/h3&gt;
&lt;p&gt;針對Route寫法的改善（原本的寫法還是可以使用），原本的方式：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Route::get('user/{id}/profile', function ($id) {
    //
})-&amp;gt;name('profile');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;改善後的方式：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Route::name('profile')-&amp;gt;get('user/{id}/profile', function ($id) {
    // some closure action...
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;這樣改善之後可以對於找route的命名有一定的幫助，不然每次當route很多，開發者太多沒好好按照格式寫的話，往往都會找name找得很辛苦。
另外也可以使用以下幾種寫法，&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Registering a route name and a middleware&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Route::name('users.index')-&amp;gt;middleware('auth')-&amp;gt;get('users', function () {
    // some closure action...
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Registering a middleware with a route prefix and group&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Route::middleware('auth')-&amp;gt;prefix('api')-&amp;gt;group(function () {
    // register some routes...
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Registering a middleware to a resource controller&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Route::middleware('auth')-&amp;gt;resource('photo', 'PhotoController');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;7-json-based-language-files&quot;&gt;7. JSON Based Language Files&lt;/h3&gt;
&lt;p&gt;針對多語系的處理方法新增了一個函數 &lt;code class=&quot;highlighter-rouge&quot;&gt;__()&lt;/code&gt;，使用上如下：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;__(&quot;Please enter your 4-digit verification number:&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;而在語系檔裡面就會從原本的 &lt;code class=&quot;highlighter-rouge&quot;&gt;resources/lang/en/auth.php&lt;/code&gt;變成 &lt;code class=&quot;highlighter-rouge&quot;&gt;resources/lang/en.json&lt;/code&gt;
使用json檔做語系設定，內容改成：&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Please enter your 4-digit verification number:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;men fadlak adkhel raqam al tareef&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;當要使用參數帶入的時候，使用方式如下：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;__(
    &quot;Hello :name, you have :unread messages&quot;, 
    ['name' =&amp;gt; $user-&amp;gt;name, 'unread' =&amp;gt; $notifications-&amp;gt;count]
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;而在Blade裡面也可以使用，方式如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@trans(['name' =&amp;gt; $user-&amp;gt;name, 'unread' =&amp;gt; $notifications-&amp;gt;count])
    Hello :name, you have :unread messages.
@endtrans
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;8-laravel-blade-components-and-slots&quot;&gt;8. Laravel Blade Components and Slots&lt;/h3&gt;
&lt;p&gt;Blade新增了一種加Slots的方式，&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// inc/alert.blade.php
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;alert&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

//---

// home.blade.php
@extends('welcome')

@section('content')
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Home Page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    @component('inc.alert')
        This is the alert message here.
    @endcomponent
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
@endsection
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;@component裡面的內容會自動放進$slots裡面，另一種利用方式可以取代原本的extends與yield的作法，&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// layouts/app.blade.php
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

//---

// home.blade.php
@component('layouts.app')
    @slot('title')
        Home Page
    @endslot

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        @component('inc.alert')
            This is the alert message here.
        @endcomponent
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        @component('inc.sidebar')
            This is my sidebar text. 
        @endcomponent
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
@endcomponent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@slot&lt;/code&gt;會把內容放進宣告的變數裡面，上例的情況就是’title’。&lt;/p&gt;
&lt;h3 id=&quot;9-higher-order-messaging-for-collections&quot;&gt;9. Higher Order Messaging for Collections&lt;/h3&gt;
&lt;p&gt;針對Collections需要處理集合中每個元素時，原本的作法會是類似：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$invoices-&amp;gt;each(function($invoice) {
    $invoice-&amp;gt;pay();
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;現在可以直接使用如下的方式：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$invoices-&amp;gt;each-&amp;gt;pay();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;這改進包含所有的fallback寫法的function，例如：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$employees-&amp;gt;reject(function($employee) {
    return $employee-&amp;gt;retired; 
})-&amp;gt;each(function($employee){
    $employee-&amp;gt;sendPayment();
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;也可以改寫成&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$employees-&amp;gt;reject-&amp;gt;retired-&amp;gt;each-&amp;gt;sendPayment();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;以上9項是Laravel 5.4的新特性簡介，英文原文連結&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://laravel-news.com/category/laravel-5.4&quot;&gt;https://laravel-news.com/category/laravel-5.4&lt;/a&gt;&lt;/p&gt;</content><summary type="html">Laravel 5.3才剛更新到產品上沒多久就出5.4了Orz…要逼死誰啊XD
但是許多的新特性的確不錯，來紀錄一下新特性的內容吧！</summary></entry></feed>
